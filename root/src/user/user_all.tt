[% META
   title = 'Add Service Account (New)'
   link = '<link href="/static/css/multi-select.css" media="screen" rel="stylesheet" type="text/css">'
%]

<div class="page-header">
  <h2>New Root Object Creation Form
    <small>
      <em>
	complex form for all possible stuff (user's personal data and services),
	sign &laquo;<span class="fa fa-exclamation-circle text-danger umi-opacity05"></span>&raquo; marks mandatory fields
      </em>
    </small>
  </h2>
</div>

[% IF final_message.error %]
<div class="panel panel-danger">
  <div class="panel-heading">
    <h4><span class="fa fa-exclamation-circle">&nbsp;</span>Error!</h4>
  </div>
  <div class="panel-body">
    <ul>
      [% FOREACH i IN final_message.error %]
      [% i %]
      [% END %]
    </ul>
  </div>
</div>
[% ELSIF final_message.success %]
<div class="panel panel-success">
  <div class="panel-heading">
    <h4><span class="fa fa-check-circle">&nbsp;</span>Success!</h4>
  </div>
  <div class="panel-body">
    [% final_message.success %]
  </div>
</div>
[% ELSIF final_message.warning %]
<div class="panel panel-warning">
  <div class="panel-heading">
    <h4><span class="fa fa-exclamation-triangle">&nbsp;</span>Warning!</h4>
  </div>
  <div class="panel-body">
    [% final_message.warning %]
  </div>
</div>
[% END %]

[% IF form.has_errors %]
<div class="panel panel-danger">
  <div class="panel-heading">
    <i class="fa fa-exclamation-circle"></i>
    Form contains error/s! Check all tabs, please!
  </div>
  <div class="panel-body">
    <ol>
      [% FOREACH err IN form.errors %]
      <li>[% err %]</li>
      [% END %]
    </ol>
  </div>
</div>
[% END %]

<form id="[% form.name %]" class="form-horizontal tab-content" method="post" enctype="multipart/form-data">

  [% form.field('person_givenname').render %]
  [% form.field('person_sn').render %]
  <hr>
  
  <ul role="tablist" class="col-xs-1 nav nav-pills nav-stacked" id="myTab">
    <!-- <li role="presentation">&nbsp;</li> -->
    <li class="active text-left" role="presentation">
      <a aria-controls="person" data-toggle="tab" role="tab"
	 id="person-tab" href="#person"
	 title="Personal Data" aria-expanded="true">
	<span class="fa fa-fw fa-user fa-lg"></span>
	<span class="visible-lg-inline">Person</span>
      </a>
    </li>

    <li class="text-left" role="presentation">
      <a aria-controls="auth" data-toggle="tab" role="tab"
	 id="auth-tab" href="#auth" title="Login/Password Dependent Services"
	 aria-expanded="false">
	<!-- <span class="fa fa-user-plus fa-lg"></span>
		<span class="visible-lg-inline">Login</span> -->
	<span class="fa-stack fa-fw">
	  <i class="fa fa-cog fa-stack-2x text-muted umi-opacity05"></i>
	  <i class="fa fa-user pull-right fa-stack-1x"></i>
	</span>
	<span class="visible-lg-inline">&nbsp;&nbsp;</span>
	<span class="visible-lg-inline">&nbsp;Pass</span>
      </a>
    </li>

    <li class="dropdown text-left" role="presentation">
      <a aria-controls="sec-contents" data-toggle="dropdown"
	 class="dropdown-toggle" id="umiSec" href="#"
	 title="Services Without Login/Password" aria-expanded="false">
	<!-- <span class="fa-stack fa-lg">
		<i class="fa fa-square-o fa-stack-2x"></i>
		<i class="fa fa-user-times fa-stack-1x"></i>
		</span> -->
	<span class="fa-stack fa-fw">
	  <i class="fa fa-cog fa-stack-2x text-muted umi-opacity05"></i>
	  <i class="fa fa-user-times pull-right fa-stack-1x"></i>
	</span>
	<!-- <span class="fa fa-user-times fa-lg"></span> -->
	<span class="caret"></span>
	<span class="visible-lg-inline">NoPass</span>
      </a>
      <ul id="umiSec-contents" aria-labelledby="umiSec"
	  role="menu" class="dropdown-menu">
	<li>
	  <a aria-controls="ovpn" data-toggle="tab" id="ovpn-tab"
	     role="tab" tabindex="-1" href="#ovpn" aria-expanded="false">
	    <span class="fa fa-certificate"></span>
	    OpenVPN
	  </a>
	</li>
	<li>
	  <a aria-controls="ssh" data-toggle="tab"
	     id="ssh-tab" role="tab" tabindex="-1"
	     href="#ssh" aria-expanded="false">
	    <span class="fa fa-key"></span>
	    SSH
	  </a>
	</li>
      </ul>
    </li>

    <li class="text-left" role="presentation">
      <a aria-controls="groups" data-toggle="tab" id="groups-tab"
	 role="tab" href="#ms-groups" title="Group/s User Belongs to"
	 aria-expanded="false">
	<span class="fa fa-fw fa-group fa-lg"></span>
	<span class="visible-lg-inline">Group</span>
      </a>
    </li>
  </ul>
  [% # form.render %]
  [% form.block('person').render %]
  [% form.block('auth').render %]
  [% form.block('ssh').render %]
  [% form.block('ovpn').render %]
  [% form.block('groupsselect').render %]

  <hr>
  <div class="row">
  [% form.field('aux_reset').render %]
  [% form.field('aux_submit').render %]
  </div>
</form>

[% IF params.size %]
<br><br><br>
<div class="panel panel-info">
  <div class="panel-heading">
    <h4><span class="fa fa-exclamation-triangle">&nbsp;</span>Parameters passed to form!</h4>
  </div>
  <div class="panel-body">
    <dl class="dl-horizontal">
    [% FOREACH param IN params %]
      <dt>[% param.key %]</dt><dd>[% param.value %]</dd>
      [% END %]
    </dl>
  </div>
</div>
[% END %]

<script>
 $(function(){

   // --- !!! STUB !!! -----------------------------------------------------------
   // need this because HFH adds .has-error to whole hierarchy of objects
   // instead of the only fields error have been set
   // ----------------------------------------------------------------------------
   $(".duplicate").children(".form-group.has-error").removeClass("has-error");
   $(".form-group.hfh-repinst.has-error").removeClass("has-error");
   $(".no-has-error.has-error").removeClass("has-error");
   // ----------------------------------------------------------------------------

   
   // clean whole element (input:text, input:password, input:file, select, textarea, input:radio, input:checkbox) to default state
   var resetElement = function($element) {
     $element
        .val('')
        .removeAttr('checked')
        .removeAttr('selected')
        .children("option")
        .first()
        .prop("selected",true);
   },
       currentRelation = false,
       selectServiceAuthQuery = "select[data-name='authorizedservice']",
       switchRelations = function(obj, newRelation) {
	 var $formGroupsRelated = $(".form-group.relation", obj).addClass("hidden");
	 
	 if (newRelation)
	   $formGroupsRelated.each(function(id, element) {
	     var $el = $(element);
	     if ($el.hasClass(newRelation)) {
	       $el.toggleClass("hidden");
	       $("input:text, input:password, input:file, select, textarea, input:radio, input:checkbox", $el).each(function(index, item){
		 resetElement($(item));
	       });
	     }
	   });
	 
	 currentRelation = newRelation;
       },
       onServiceChange = function(event){
	 var $this = $(this),
	     $option = $this.find("option:selected"),
	     relation = $option.data("relation"),
	     value = $this.val();
	 
	 switchRelations(
	   $this.parents(".hfh.repinst.form-group"),
	   !relation || !relation.length || !value.length
         ? false
         : relation
	 );
       },
       serviceSelectAttachEvent = function($parent) {
	 $(selectServiceAuthQuery, $parent).on("change", onServiceChange);
       },
       duplicatedAttachEvent = function($parent, unhide) {
	 var $rmDuplicate = $parent
           .find(".rm-duplicate");
	 $rmDuplicate
	   .click(function(){
	     $(this).parents(".duplicated").remove();
	   });
	 if (unhide) {
	   $rmDuplicate.removeClass("hidden");
	 } else {
	   $(".duplicated .rm-duplicate", $parent).removeClass("hidden");
	 }
       };
   
   // duplicating code
   // $("a span.rm-duplicate").on("click",function(e){
   $("a.btn[data-duplicate]").on("click",function(e){
     e.preventDefault();
     var $a = $(this),
         counter = parseInt($a.data("counter")) || ($a.data("counter",0),0),
         $fieldset = $a.parents("fieldset"),
         $duplicateOriginal = $fieldset.find("div."+$a.data('duplicate')),
	 $duplicate = $duplicateOriginal.first().clone(),
	 $parent = $duplicateOriginal.parent();
    ++counter;
     
     $duplicate
       .removeAttr("id")
       .removeClass("duplicate")
       .addClass("duplicated")
       .children()
       .prop("id",$duplicateOriginal.parents(".form-group").attr("id")+"."+counter);

     $("input:text, input:password, input:file, select, textarea, input:radio, input:checkbox", $duplicate).each(function(id, element){
       var $element = $(element),
           name = $element.data("group")+"."+counter+"."+$element.data('name');
       $element
        .removeAttr("id")
        .prop("name", name);
       resetElement($element);
       
       var $formGroups = $element.parents(".form-group");
       $formGroups.each(function(index, formGroupElement){
	 var $formGroup = $(formGroupElement);
	 if ($formGroup.hasClass("relation")) $formGroup.addClass("hidden");
	 $formGroup
        .find("label")
        .prop("for", name);	
       });
     });
     
     $duplicate.appendTo($parent);
     // $duplicate.find(".fa-times-circle").removeClass("hidden").click(function(){
     /*$duplicate.find(".rm-duplicate").removeClass("hidden").click(function(){
       $(this).parents(".duplicated").remove();
     });*/
     duplicatedAttachEvent($duplicate, !0);
     serviceSelectAttachEvent($duplicate);

     $('html, body').animate({
       scrollTop: $duplicate.offset().top-80
     }, 1000);
     
     $a.data("counter",counter);   
   });

   serviceSelectAttachEvent($(document));
   duplicatedAttachEvent($(document));
 });
</script>  

<script>
 // groups
 $(function(){
   $('#groups').multiSelect({
     keepOrder: true,

     selectableHeader: "<button type='button' class='btn btn-block btn-info btn-sm'><span class='fa fa-group'>&nbsp;</span><b>Groups Available</b></button><input type='text' class='form-control search-input input-sm' autocomplete='off' placeholder='type to search or clear all for default'>",
     selectionHeader: "<button type='button' class='btn btn-block btn-success btn-sm'><span class='fa fa-group'>&nbsp;</span><b>Groups Selected</b></button><input type='text' class='form-control search-input input-sm' autocomplete='off' placeholder='type to search or clear all for default'>",

     afterInit: function(ms){
       var that = this,
           $selectableSearch = that.$selectableUl.prev(),
           $selectionSearch = that.$selectionUl.prev(),
           selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
           selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

       that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
				   .on('keydown', function(e){
				     if (e.which === 40){
				       that.$selectableUl.focus();
				       return false;
				     }
				   });

       that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
				  .on('keydown', function(e){
				    if (e.which == 40){
				      that.$selectionUl.focus();
				      return false;
				    }
				  });
     },
     afterSelect: function(){
       this.qs1.cache();
       this.qs2.cache();
     },
     afterDeselect: function(){
       this.qs1.cache();
       this.qs2.cache();
     }

     /* var element = document.getElementById("ms-groups");
	element.classList.add("tab-pane"); */
     
   });
 });
</script>

<script> [% # needed to put multiselect related things into tab %]
 $(function(){
  var element = document.getElementById("ms-groups");
  element.classList.add("tab-pane");
  });
</script>


<script src="/static/js/jquery.multi-select.js" type="text/javascript"></script>
<script src="/static/js/jquery.quicksearch.js" type="text/javascript"></script>
